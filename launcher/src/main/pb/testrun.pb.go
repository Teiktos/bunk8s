// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.6.1
// source: testrun.proto

package pb

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CoordinatorConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TestRunnerPods []*TestRunnerPod `protobuf:"bytes,1,rep,name=testRunnerPods,proto3" json:"testRunnerPods,omitempty"`
}

func (x *CoordinatorConfig) Reset() {
	*x = CoordinatorConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testrun_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoordinatorConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoordinatorConfig) ProtoMessage() {}

func (x *CoordinatorConfig) ProtoReflect() protoreflect.Message {
	mi := &file_testrun_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoordinatorConfig.ProtoReflect.Descriptor instead.
func (*CoordinatorConfig) Descriptor() ([]byte, []int) {
	return file_testrun_proto_rawDescGZIP(), []int{0}
}

func (x *CoordinatorConfig) GetTestRunnerPods() []*TestRunnerPod {
	if x != nil {
		return x.TestRunnerPods
	}
	return nil
}

type Containers struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContainerName       string   `protobuf:"bytes,1,opt,name=containerName,proto3" json:"containerName,omitempty"`
	Image               string   `protobuf:"bytes,2,opt,name=image,proto3" json:"image,omitempty"`
	StartupCommands     []string `protobuf:"bytes,3,rep,name=startupCommands,proto3" json:"startupCommands,omitempty"`
	StartupCommandsArgs []string `protobuf:"bytes,4,rep,name=startupCommandsArgs,proto3" json:"startupCommandsArgs,omitempty"`
	TestResultPath      string   `protobuf:"bytes,5,opt,name=testResultPath,proto3" json:"testResultPath,omitempty"`
}

func (x *Containers) Reset() {
	*x = Containers{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testrun_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Containers) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Containers) ProtoMessage() {}

func (x *Containers) ProtoReflect() protoreflect.Message {
	mi := &file_testrun_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Containers.ProtoReflect.Descriptor instead.
func (*Containers) Descriptor() ([]byte, []int) {
	return file_testrun_proto_rawDescGZIP(), []int{1}
}

func (x *Containers) GetContainerName() string {
	if x != nil {
		return x.ContainerName
	}
	return ""
}

func (x *Containers) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *Containers) GetStartupCommands() []string {
	if x != nil {
		return x.StartupCommands
	}
	return nil
}

func (x *Containers) GetStartupCommandsArgs() []string {
	if x != nil {
		return x.StartupCommandsArgs
	}
	return nil
}

func (x *Containers) GetTestResultPath() string {
	if x != nil {
		return x.TestResultPath
	}
	return ""
}

type TestRunnerPod struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PodName     string        `protobuf:"bytes,1,opt,name=podName,proto3" json:"podName,omitempty"`
	Namespace   string        `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	TestTimeout int64         `protobuf:"varint,3,opt,name=testTimeout,proto3" json:"testTimeout,omitempty"`
	Containers  []*Containers `protobuf:"bytes,4,rep,name=containers,proto3" json:"containers,omitempty"`
}

func (x *TestRunnerPod) Reset() {
	*x = TestRunnerPod{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testrun_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TestRunnerPod) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestRunnerPod) ProtoMessage() {}

func (x *TestRunnerPod) ProtoReflect() protoreflect.Message {
	mi := &file_testrun_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestRunnerPod.ProtoReflect.Descriptor instead.
func (*TestRunnerPod) Descriptor() ([]byte, []int) {
	return file_testrun_proto_rawDescGZIP(), []int{2}
}

func (x *TestRunnerPod) GetPodName() string {
	if x != nil {
		return x.PodName
	}
	return ""
}

func (x *TestRunnerPod) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *TestRunnerPod) GetTestTimeout() int64 {
	if x != nil {
		return x.TestTimeout
	}
	return 0
}

func (x *TestRunnerPod) GetContainers() []*Containers {
	if x != nil {
		return x.Containers
	}
	return nil
}

type ServerReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TestRunnerPods []*TestRunnerPodReply `protobuf:"bytes,1,rep,name=testRunnerPods,proto3" json:"testRunnerPods,omitempty"`
}

func (x *ServerReply) Reset() {
	*x = ServerReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testrun_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerReply) ProtoMessage() {}

func (x *ServerReply) ProtoReflect() protoreflect.Message {
	mi := &file_testrun_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerReply.ProtoReflect.Descriptor instead.
func (*ServerReply) Descriptor() ([]byte, []int) {
	return file_testrun_proto_rawDescGZIP(), []int{3}
}

func (x *ServerReply) GetTestRunnerPods() []*TestRunnerPodReply {
	if x != nil {
		return x.TestRunnerPods
	}
	return nil
}

type SidecarContainerReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SidecarContainerName string `protobuf:"bytes,1,opt,name=sidecarContainerName,proto3" json:"sidecarContainerName,omitempty"`
}

func (x *SidecarContainerReply) Reset() {
	*x = SidecarContainerReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testrun_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SidecarContainerReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SidecarContainerReply) ProtoMessage() {}

func (x *SidecarContainerReply) ProtoReflect() protoreflect.Message {
	mi := &file_testrun_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SidecarContainerReply.ProtoReflect.Descriptor instead.
func (*SidecarContainerReply) Descriptor() ([]byte, []int) {
	return file_testrun_proto_rawDescGZIP(), []int{4}
}

func (x *SidecarContainerReply) GetSidecarContainerName() string {
	if x != nil {
		return x.SidecarContainerName
	}
	return ""
}

type TestRunnerPodReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReturnCode                  int64                    `protobuf:"varint,1,opt,name=returnCode,proto3" json:"returnCode,omitempty"`
	PodName                     string                   `protobuf:"bytes,2,opt,name=podName,proto3" json:"podName,omitempty"`
	Namespace                   string                   `protobuf:"bytes,3,opt,name=namespace,proto3" json:"namespace,omitempty"`
	TestRunnerSidecarContainers []*SidecarContainerReply `protobuf:"bytes,4,rep,name=testRunnerSidecarContainers,proto3" json:"testRunnerSidecarContainers,omitempty"`
}

func (x *TestRunnerPodReply) Reset() {
	*x = TestRunnerPodReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testrun_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TestRunnerPodReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestRunnerPodReply) ProtoMessage() {}

func (x *TestRunnerPodReply) ProtoReflect() protoreflect.Message {
	mi := &file_testrun_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestRunnerPodReply.ProtoReflect.Descriptor instead.
func (*TestRunnerPodReply) Descriptor() ([]byte, []int) {
	return file_testrun_proto_rawDescGZIP(), []int{5}
}

func (x *TestRunnerPodReply) GetReturnCode() int64 {
	if x != nil {
		return x.ReturnCode
	}
	return 0
}

func (x *TestRunnerPodReply) GetPodName() string {
	if x != nil {
		return x.PodName
	}
	return ""
}

func (x *TestRunnerPodReply) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *TestRunnerPodReply) GetTestRunnerSidecarContainers() []*SidecarContainerReply {
	if x != nil {
		return x.TestRunnerSidecarContainers
	}
	return nil
}

var File_testrun_proto protoreflect.FileDescriptor

var file_testrun_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x74, 0x65, 0x73, 0x74, 0x72, 0x75, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x07, 0x74, 0x65, 0x73, 0x74, 0x72, 0x75, 0x6e, 0x22, 0x53, 0x0a, 0x11, 0x43, 0x6f, 0x6f, 0x72,
	0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x3e, 0x0a,
	0x0e, 0x74, 0x65, 0x73, 0x74, 0x52, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x50, 0x6f, 0x64, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x72, 0x75, 0x6e, 0x2e,
	0x54, 0x65, 0x73, 0x74, 0x52, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x50, 0x6f, 0x64, 0x52, 0x0e, 0x74,
	0x65, 0x73, 0x74, 0x52, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x50, 0x6f, 0x64, 0x73, 0x22, 0xcc, 0x01,
	0x0a, 0x0a, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x12, 0x24, 0x0a, 0x0d,
	0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x75, 0x70, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x75, 0x70, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x73, 0x12, 0x30, 0x0a, 0x13, 0x73, 0x74, 0x61, 0x72, 0x74, 0x75, 0x70, 0x43, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x73, 0x41, 0x72, 0x67, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x13, 0x73, 0x74, 0x61, 0x72, 0x74, 0x75, 0x70, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73,
	0x41, 0x72, 0x67, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x74, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x50, 0x61, 0x74, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x74, 0x65,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x50, 0x61, 0x74, 0x68, 0x22, 0x9e, 0x01, 0x0a,
	0x0d, 0x54, 0x65, 0x73, 0x74, 0x52, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x50, 0x6f, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x70, 0x6f, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x70, 0x6f, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x65, 0x73, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x74, 0x65, 0x73,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x33, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x74,
	0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x74,
	0x65, 0x73, 0x74, 0x72, 0x75, 0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72,
	0x73, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x22, 0x52, 0x0a,
	0x0b, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x43, 0x0a, 0x0e,
	0x74, 0x65, 0x73, 0x74, 0x52, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x50, 0x6f, 0x64, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x72, 0x75, 0x6e, 0x2e, 0x54,
	0x65, 0x73, 0x74, 0x52, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x50, 0x6f, 0x64, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x52, 0x0e, 0x74, 0x65, 0x73, 0x74, 0x52, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x50, 0x6f, 0x64,
	0x73, 0x22, 0x4b, 0x0a, 0x15, 0x53, 0x69, 0x64, 0x65, 0x63, 0x61, 0x72, 0x43, 0x6f, 0x6e, 0x74,
	0x61, 0x69, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x32, 0x0a, 0x14, 0x73, 0x69,
	0x64, 0x65, 0x63, 0x61, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x73, 0x69, 0x64, 0x65, 0x63, 0x61,
	0x72, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xce,
	0x01, 0x0a, 0x12, 0x54, 0x65, 0x73, 0x74, 0x52, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x50, 0x6f, 0x64,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x43,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72,
	0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x6f, 0x64, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x6f, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x60, 0x0a,
	0x1b, 0x74, 0x65, 0x73, 0x74, 0x52, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x53, 0x69, 0x64, 0x65, 0x63,
	0x61, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x72, 0x75, 0x6e, 0x2e, 0x53, 0x69, 0x64,
	0x65, 0x63, 0x61, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x52, 0x1b, 0x74, 0x65, 0x73, 0x74, 0x52, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x53, 0x69,
	0x64, 0x65, 0x63, 0x61, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x32,
	0x51, 0x0a, 0x07, 0x54, 0x65, 0x73, 0x74, 0x52, 0x75, 0x6e, 0x12, 0x46, 0x0a, 0x10, 0x44, 0x65,
	0x70, 0x6c, 0x6f, 0x79, 0x54, 0x65, 0x73, 0x74, 0x52, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x12, 0x1a,
	0x2e, 0x74, 0x65, 0x73, 0x74, 0x72, 0x75, 0x6e, 0x2e, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e,
	0x61, 0x74, 0x6f, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x1a, 0x14, 0x2e, 0x74, 0x65, 0x73,
	0x74, 0x72, 0x75, 0x6e, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x00, 0x42, 0x04, 0x5a, 0x02, 0x2e, 0x2f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_testrun_proto_rawDescOnce sync.Once
	file_testrun_proto_rawDescData = file_testrun_proto_rawDesc
)

func file_testrun_proto_rawDescGZIP() []byte {
	file_testrun_proto_rawDescOnce.Do(func() {
		file_testrun_proto_rawDescData = protoimpl.X.CompressGZIP(file_testrun_proto_rawDescData)
	})
	return file_testrun_proto_rawDescData
}

var file_testrun_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_testrun_proto_goTypes = []interface{}{
	(*CoordinatorConfig)(nil),     // 0: testrun.CoordinatorConfig
	(*Containers)(nil),            // 1: testrun.Containers
	(*TestRunnerPod)(nil),         // 2: testrun.TestRunnerPod
	(*ServerReply)(nil),           // 3: testrun.ServerReply
	(*SidecarContainerReply)(nil), // 4: testrun.SidecarContainerReply
	(*TestRunnerPodReply)(nil),    // 5: testrun.TestRunnerPodReply
}
var file_testrun_proto_depIdxs = []int32{
	2, // 0: testrun.CoordinatorConfig.testRunnerPods:type_name -> testrun.TestRunnerPod
	1, // 1: testrun.TestRunnerPod.containers:type_name -> testrun.Containers
	5, // 2: testrun.ServerReply.testRunnerPods:type_name -> testrun.TestRunnerPodReply
	4, // 3: testrun.TestRunnerPodReply.testRunnerSidecarContainers:type_name -> testrun.SidecarContainerReply
	0, // 4: testrun.TestRun.DeployTestRunner:input_type -> testrun.CoordinatorConfig
	3, // 5: testrun.TestRun.DeployTestRunner:output_type -> testrun.ServerReply
	5, // [5:6] is the sub-list for method output_type
	4, // [4:5] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_testrun_proto_init() }
func file_testrun_proto_init() {
	if File_testrun_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_testrun_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CoordinatorConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testrun_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Containers); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testrun_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TestRunnerPod); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testrun_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testrun_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SidecarContainerReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testrun_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TestRunnerPodReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_testrun_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_testrun_proto_goTypes,
		DependencyIndexes: file_testrun_proto_depIdxs,
		MessageInfos:      file_testrun_proto_msgTypes,
	}.Build()
	File_testrun_proto = out.File
	file_testrun_proto_rawDesc = nil
	file_testrun_proto_goTypes = nil
	file_testrun_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// TestRunClient is the client API for TestRun service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TestRunClient interface {
	DeployTestRunner(ctx context.Context, in *CoordinatorConfig, opts ...grpc.CallOption) (*ServerReply, error)
}

type testRunClient struct {
	cc grpc.ClientConnInterface
}

func NewTestRunClient(cc grpc.ClientConnInterface) TestRunClient {
	return &testRunClient{cc}
}

func (c *testRunClient) DeployTestRunner(ctx context.Context, in *CoordinatorConfig, opts ...grpc.CallOption) (*ServerReply, error) {
	out := new(ServerReply)
	err := c.cc.Invoke(ctx, "/testrun.TestRun/DeployTestRunner", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TestRunServer is the server API for TestRun service.
type TestRunServer interface {
	DeployTestRunner(context.Context, *CoordinatorConfig) (*ServerReply, error)
}

// UnimplementedTestRunServer can be embedded to have forward compatible implementations.
type UnimplementedTestRunServer struct {
}

func (*UnimplementedTestRunServer) DeployTestRunner(context.Context, *CoordinatorConfig) (*ServerReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeployTestRunner not implemented")
}

func RegisterTestRunServer(s *grpc.Server, srv TestRunServer) {
	s.RegisterService(&_TestRun_serviceDesc, srv)
}

func _TestRun_DeployTestRunner_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CoordinatorConfig)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TestRunServer).DeployTestRunner(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/testrun.TestRun/DeployTestRunner",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TestRunServer).DeployTestRunner(ctx, req.(*CoordinatorConfig))
	}
	return interceptor(ctx, in, info, handler)
}

var _TestRun_serviceDesc = grpc.ServiceDesc{
	ServiceName: "testrun.TestRun",
	HandlerType: (*TestRunServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "DeployTestRunner",
			Handler:    _TestRun_DeployTestRunner_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "testrun.proto",
}
